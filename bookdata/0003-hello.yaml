title: Hello World
description:
  This is a basic example to use mustache or handlebars template.

Define the template:
  lightncandy:
    code: $template = 'Hello, {{foo}}!';
  handlebars.js:
    code: var template = 'Hello, {{foo}}!';
  mustache:
    code: var template = 'Hello, {{foo}}!';
  
Compile the template:
  lightncandy:
    code: |
      $php = LightnCandy::compile($template);
      $render = LightnCandy::prepare($php);
  handlebars.js:
    code: var render = Handlebars.compile(template);
  mustache:
    content: mustache.js supports pre-parsing. The parsed token tree will be cached.
    code: Mustache.parse(template);

Define the data:
  lightncandy:
    code: $data = array('foo' => 'world');
  handlebars.js:
    code: "var data = {foo: 'world'};"
  mustache:
    code: "var data = {foo: 'world'};"

Rendering the template:
  lightncandy:
    code: echo $render($data);
  handlebars.js:
    code: console.log(render(data));
  mustache:
    code: console.log(Mustache.render(template, data));

Reuse the render function:
  lightncandy:
    note: You do not need to compile template everytime. You can reuse the render function with different data.
    code: echo $render($another_data);
  handlebars.js:
    note: You do not need to compile template everytime. You can reuse the render function with different data.
    code: console.log(render(another_data));
  mustache:
    note: Mustache does not support pre-compile, so you need to compile the template everytime.
    code: console.log(Mustache.render(template, another_data));

The full code:
  lightncandy:
    collectcode:
      6:
  handlebars.js:
    collectcode:
      6:
  mustache:
    collectcode:
      6:
